<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="Superstore_Analysis.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2519"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="cleaned_Superstore_data" custom_title="0" dock_id="2" table="4,23:maincleaned_Superstore_data"/><dock_state state="000000ff00000000fd00000001000000020000024800000241fc0100000002fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000000002480000016200ffffff000002480000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="cleaned_Superstore_data" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="119"/><column index="2" value="87"/><column index="3" value="87"/><column index="4" value="119"/><column index="5" value="75"/><column index="6" value="167"/><column index="7" value="95"/><column index="8" value="111"/><column index="9" value="135"/><column index="10" value="119"/><column index="11" value="73"/><column index="12" value="63"/><column index="13" value="127"/><column index="14" value="127"/><column index="15" value="95"/><column index="16" value="300"/><column index="17" value="79"/><column index="18" value="56"/><column index="19" value="56"/><column index="20" value="87"/><column index="21" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">





-- 1. How many years does the dataset cover?

SELECT MIN(strftime('%Y', &quot;Order Date&quot;)) AS start_year, 

       MAX(strftime('%Y', &quot;Order Date&quot;)) AS end_year,

       (MAX(strftime('%Y', &quot;Order Date&quot;)) - MIN(strftime('%Y', &quot;Order Date&quot;)) + 1) AS total_years

FROM cleaned_Superstore_data;



-- 2. What is the total number of customers?

SELECT COUNT(DISTINCT &quot;Customer ID&quot;) AS total_customers FROM cleaned_Superstore_data;



-- 3. What is the total number of orders?

SELECT COUNT(DISTINCT &quot;Order ID&quot;) AS total_orders FROM cleaned_Superstore_data;



-- 4. What is the total number of items sold?

SELECT SUM(Quantity) AS total_items_sold FROM cleaned_Superstore_data;



-- 5. What is the total sales amount?

SELECT SUM(Sales) AS total_sales FROM cleaned_Superstore_data;



-- 6. What is the total profit amount?

SELECT SUM(Profit) AS total_profit FROM cleaned_Superstore_data;



-- 7. What is the profit ratio?

SELECT (SUM(Profit) * 100.0) / SUM(Sales) AS profit_ratio FROM cleaned_Superstore_data;



-- 8. What is the average discount?

SELECT AVG(Discount) AS avg_discount FROM cleaned_Superstore_data;



-- 9. Sales and Profit for Regions

SELECT Region, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY Region

ORDER BY total_sales DESC;



-- 10. Sales and Profit for States

SELECT State, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY State

ORDER BY total_sales DESC;



-- 11. Sales and Profit for Cities

SELECT City, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY City

ORDER BY total_sales DESC;



-- 12. Sales and Profit for Segments

SELECT Segment, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY Segment;



-- 13. Sales and Profit for Ship Modes

SELECT &quot;Ship Mode&quot;, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY &quot;Ship Mode&quot;;



-- 14. Sales and Profit for Categories

SELECT Category, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY Category;



-- 15. Sales and Profit for Sub-Categories

SELECT &quot;Sub-Category&quot;, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY &quot;Sub-Category&quot;;



-- 16. Sales and Profit for Products

SELECT &quot;Product Name&quot;, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY &quot;Product Name&quot;

ORDER BY total_sales DESC

LIMIT 10;



-- 17. Sales and Profit for Customers

SELECT &quot;Customer ID&quot;, &quot;Customer Name&quot;, SUM(Sales) AS total_sales, SUM(Profit) AS total_profit 

FROM cleaned_Superstore_data

GROUP BY &quot;Customer ID&quot;, &quot;Customer Name&quot;

ORDER BY total_sales DESC

LIMIT 10;



-- 18. Sales and Profit Over Time (Monthly)

SELECT strftime('%Y-%m', &quot;Order Date&quot;) AS month_year, 

       SUM(Sales) AS total_sales, 

       SUM(Profit) AS total_profit

FROM cleaned_Superstore_data

GROUP BY month_year

ORDER BY month_year;



-- 19. Sales and Profit Over Seasons

SELECT CASE 

            WHEN strftime('%m', &quot;Order Date&quot;) IN ('12', '01', '02') THEN 'Winter'

            WHEN strftime('%m', &quot;Order Date&quot;) IN ('03', '04', '05') THEN 'Spring'

            WHEN strftime('%m', &quot;Order Date&quot;) IN ('06', '07', '08') THEN 'Summer'

            ELSE 'Autumn' 

       END AS season,

       SUM(Sales) AS total_sales, 

       SUM(Profit) AS total_profit

FROM cleaned_Superstore_data

GROUP BY season;



-- 20. Impact of Shipping Delays on Sales

SELECT 

    CASE 

        WHEN JULIANDAY(&quot;Ship Date&quot;) - JULIANDAY(&quot;Order Date&quot;) = 0 THEN 'Same Day'

        WHEN JULIANDAY(&quot;Ship Date&quot;) - JULIANDAY(&quot;Order Date&quot;) BETWEEN 1 AND 2 THEN '1-2 Days'

        WHEN JULIANDAY(&quot;Ship Date&quot;) - JULIANDAY(&quot;Order Date&quot;) BETWEEN 3 AND 5 THEN '3-5 Days'

        ELSE 'More than 5 Days'

    END AS shipping_delay,

    SUM(Sales) AS total_sales,

    SUM(Profit) AS total_profit

FROM cleaned_Superstore_data

GROUP BY shipping_delay;



-- 21. Seasonal Sales Trends for Regions

SELECT 

    CASE 

        WHEN strftime('%m', &quot;Order Date&quot;) IN ('12', '01', '02') THEN 'Winter'

        WHEN strftime('%m', &quot;Order Date&quot;) IN ('03', '04', '05') THEN 'Spring'

        WHEN strftime('%m', &quot;Order Date&quot;) IN ('06', '07', '08') THEN 'Summer'

        ELSE 'Autumn' 

    END AS season,

    Region,

    SUM(Sales) AS total_sales,

    SUM(Profit) AS total_profit

FROM cleaned_Superstore_data

GROUP BY season, Region

ORDER BY season;



-- 22. Impact of Discount on Profit

SELECT 

    CASE 

        WHEN Discount = 0 THEN 'No Discount'

        WHEN Discount BETWEEN 0.01 AND 0.2 THEN 'Low Discount (1-20%)'

        WHEN Discount BETWEEN 0.21 AND 0.5 THEN 'Medium Discount (21-50%)'

        ELSE 'High Discount (51%+)' 

    END AS discount_range,

    SUM(Sales) AS total_sales,

    SUM(Profit) AS total_profit

FROM cleaned_Superstore_data

GROUP BY discount_range;



-- 23. Profit Over Years for Categories &amp; Sub-Categories

SELECT strftime('%Y', &quot;Order Date&quot;) AS year, Category, &quot;Sub-Category&quot;,

       SUM(Sales) AS total_sales, SUM(Profit) AS total_profit

FROM cleaned_Superstore_data

GROUP BY year, Category, &quot;Sub-Category&quot;

ORDER BY year, total_profit DESC;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
